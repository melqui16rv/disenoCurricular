#!/bin/bash

echo "üîç VALIDACI√ìN COMPLETA DE ARCHIVOS SQL ACTUALIZADOS"
echo "==================================================="
echo ""

# Contador de errores
errores=0

# Array de archivos a validar
archivos=(
    "import/Base_De_Datos.sql"
    "import/Dise√±os Curriculares.sql"
    "import/FORMA_de_importacion.sql"
    "import/datos_ejemplo.sql"
    "import/insertPruebaCompletar.sql"
)

echo "üìÅ ARCHIVOS A VALIDAR:"
for archivo in "${archivos[@]}"; do
    if [ -f "$archivo" ]; then
        echo "   ‚úÖ $archivo"
    else
        echo "   ‚ùå $archivo (NO ENCONTRADO)"
        ((errores++))
    fi
done
echo ""

echo "üîß VALIDACIONES ESTRUCTURALES:"
echo ""

# Funci√≥n para validar estructuras de tablas
validar_estructura() {
    local archivo=$1
    local errores_archivo=0
    
    echo "üìÑ Validando: $archivo"
    
    if [ ! -f "$archivo" ]; then
        echo "   ‚ùå Archivo no encontrado"
        return 1
    fi
    
    # Validar tabla dise√±os
    if grep -q "CREATE TABLE.*dise√±os" "$archivo"; then
        echo "   ‚úÖ Tabla 'dise√±os' encontrada"
        
        # Validar campos cr√≠ticos
        if grep -q "codigoDise√±o.*VARCHAR(255).*NOT NULL" "$archivo"; then
            echo "   ‚úÖ Campo 'codigoDise√±o' correcto"
        else
            echo "   ‚ùå Campo 'codigoDise√±o' incorrecto o faltante"
            ((errores_archivo++))
        fi
        
        if grep -q "gradoNivelAcademico.*INT" "$archivo"; then
            echo "   ‚úÖ Campo 'gradoNivelAcademico' es INT"
        else
            echo "   ‚ö†Ô∏è  Campo 'gradoNivelAcademico' podr√≠a no ser INT"
        fi
        
        if grep -q "PRIMARY KEY.*codigoDise√±o" "$archivo"; then
            echo "   ‚úÖ Clave primaria 'codigoDise√±o' definida"
        else
            echo "   ‚ùå Clave primaria 'codigoDise√±o' faltante"
            ((errores_archivo++))
        fi
    else
        echo "   ‚ö†Ô∏è  Tabla 'dise√±os' no encontrada en este archivo"
    fi
    
    # Validar tabla competencias
    if grep -q "CREATE TABLE.*competencias" "$archivo"; then
        echo "   ‚úÖ Tabla 'competencias' encontrada"
        
        if grep -q "codigoDise√±oCompetencia.*VARCHAR(255).*NOT NULL" "$archivo"; then
            echo "   ‚úÖ Campo 'codigoDise√±oCompetencia' correcto"
        else
            echo "   ‚ùå Campo 'codigoDise√±oCompetencia' incorrecto"
            ((errores_archivo++))
        fi
        
        if grep -q "PRIMARY KEY.*codigoDise√±oCompetencia" "$archivo"; then
            echo "   ‚úÖ Clave primaria 'codigoDise√±oCompetencia' definida"
        else
            echo "   ‚ùå Clave primaria 'codigoDise√±oCompetencia' faltante"
            ((errores_archivo++))
        fi
    fi
    
    # Validar tabla raps
    if grep -q "CREATE TABLE.*raps" "$archivo"; then
        echo "   ‚úÖ Tabla 'raps' encontrada"
        
        if grep -q "codigoDise√±oCompetenciaRap.*VARCHAR(255).*NOT NULL" "$archivo"; then
            echo "   ‚úÖ Campo 'codigoDise√±oCompetenciaRap' correcto"
        else
            echo "   ‚ùå Campo 'codigoDise√±oCompetenciaRap' incorrecto"
            ((errores_archivo++))
        fi
        
        if grep -q "codigoRapAutomatico.*INT.*AUTO_INCREMENT" "$archivo"; then
            echo "   ‚úÖ Campo 'codigoRapAutomatico' con AUTO_INCREMENT"
        else
            echo "   ‚ö†Ô∏è  Campo 'codigoRapAutomatico' podr√≠a no tener AUTO_INCREMENT"
        fi
        
        if grep -q "PRIMARY KEY.*codigoDise√±oCompetenciaRap" "$archivo"; then
            echo "   ‚úÖ Clave primaria 'codigoDise√±oCompetenciaRap' definida"
        else
            echo "   ‚ùå Clave primaria 'codigoDise√±oCompetenciaRap' faltante"
            ((errores_archivo++))
        fi
    fi
    
    # Validar sintaxis b√°sica
    if grep -q "ENGINE=InnoDB" "$archivo"; then
        echo "   ‚úÖ Especificaci√≥n de motor InnoDB encontrada"
    else
        echo "   ‚ö†Ô∏è  Especificaci√≥n de motor InnoDB faltante (opcional)"
    fi
    
    # Validar comentarios malformados
    comentarios_malos=$(grep -c "^[ \t]*-\{3,\}[^-\s]" "$archivo" 2>/dev/null || echo "0")
    if [ "$comentarios_malos" -eq 0 ]; then
        echo "   ‚úÖ No hay comentarios malformados"
    else
        echo "   ‚ùå Se encontraron $comentarios_malos comentarios malformados"
        ((errores_archivo++))
    fi
    
    echo ""
    return $errores_archivo
}

# Validar cada archivo
for archivo in "${archivos[@]}"; do
    validar_estructura "$archivo"
    resultado=$?
    ((errores += resultado))
done

echo "üß™ VALIDACIONES ESPEC√çFICAS:"
echo ""

# Validar consistencia entre archivos base
echo "üîÑ Verificando consistencia entre Base_De_Datos.sql y Dise√±os Curriculares.sql..."

# Extraer estructura de dise√±os de ambos archivos
if [ -f "import/Base_De_Datos.sql" ] && [ -f "import/Dise√±os Curriculares.sql" ]; then
    campos_base=$(grep -A 30 "CREATE TABLE.*dise√±os" "import/Base_De_Datos.sql" | grep -c "`.*`")
    campos_disenos=$(grep -A 30 "CREATE TABLE.*dise√±os" "import/Dise√±os Curriculares.sql" | grep -c "`.*`")
    
    echo "   Campos en Base_De_Datos.sql: $campos_base"
    echo "   Campos en Dise√±os Curriculares.sql: $campos_disenos"
    
    if [ "$campos_base" -eq "$campos_disenos" ]; then
        echo "   ‚úÖ N√∫mero de campos coincide"
    else
        echo "   ‚ö†Ô∏è  N√∫mero de campos difiere (revisar manualmente)"
    fi
else
    echo "   ‚ùå No se pueden comparar los archivos base"
    ((errores++))
fi

echo ""

# Validar datos de ejemplo
echo "üóÉÔ∏è  Verificando estructura de datos de ejemplo..."

if [ -f "import/datos_ejemplo.sql" ]; then
    # Verificar que use codigoRapDise√±o en lugar de codigoRap
    if grep -q "codigoRapDise√±o" "import/datos_ejemplo.sql"; then
        echo "   ‚úÖ Usa 'codigoRapDise√±o' correctamente"
    else
        echo "   ‚ùå No usa 'codigoRapDise√±o' en datos de ejemplo"
        ((errores++))
    fi
    
    # Verificar que no especifique codigoRapAutomatico en INSERT
    if grep -q "codigoRapAutomatico" "import/datos_ejemplo.sql"; then
        echo "   ‚ö†Ô∏è  Puede contener referencias a 'codigoRapAutomatico' en INSERT (revisar)"
    else
        echo "   ‚úÖ No especifica 'codigoRapAutomatico' en INSERT statements"
    fi
else
    echo "   ‚ùå Archivo datos_ejemplo.sql no encontrado"
    ((errores++))
fi

echo ""

echo "üìä RESUMEN FINAL:"
echo "=================="

if [ $errores -eq 0 ]; then
    echo "üéâ ¬°VALIDACI√ìN EXITOSA!"
    echo ""
    echo "‚úÖ Todos los archivos SQL han sido actualizados correctamente"
    echo "‚úÖ Las estructuras de tablas son consistentes"
    echo "‚úÖ Los tipos de datos son correctos"
    echo "‚úÖ Las claves primarias est√°n definidas apropiadamente"
    echo "‚úÖ Los comentarios SQL est√°n bien formateados"
    echo "‚úÖ Los datos de ejemplo usan la estructura actualizada"
    echo ""
    echo "üöÄ Los archivos est√°n listos para importaci√≥n en phpMyAdmin"
else
    echo "‚ö†Ô∏è  SE ENCONTRARON $errores PROBLEMAS"
    echo ""
    echo "üìã RECOMENDACIONES:"
    echo "   - Revisar los errores marcados con ‚ùå"
    echo "   - Verificar manualmente las advertencias marcadas con ‚ö†Ô∏è"
    echo "   - Probar importaci√≥n en ambiente de desarrollo antes de producci√≥n"
fi

echo ""
echo "üìÅ ARCHIVOS VALIDADOS:"
for archivo in "${archivos[@]}"; do
    if [ -f "$archivo" ]; then
        tamano=$(wc -c < "$archivo")
        lineas=$(wc -l < "$archivo")
        echo "   üìÑ $archivo - $tamano bytes, $lineas l√≠neas"
    fi
done

echo ""
echo "‚ú® Validaci√≥n completada: $(date)"
